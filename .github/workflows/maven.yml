# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: 8
        distribution: 'adopt'
        cache: 'maven'

    - name: Build with Maven
      run: mvn -B package
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  conventional-commits-versionning-and-docker:
    needs: [build]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    name: Bump version and create release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: 'npm'
      - name: Install Semantic release and maven-semantic-release plugin
        run: |
          npm install -g semantic-release \
          @conveyal/maven-semantic-release @semantic-release/git \
          @semantic-release/changelog
      - name: Run semantic release to bump version and create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --skip-maven-deploy

      # et maintenant... Docker (pas de job pour rester sur le même repo potentiellement taggé)
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
          cache: 'maven'

      - name: Prepare tags
        id : image_tags
        run: |
           VERSION=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ $VERSION ]]; then
            echo ::set-output name=tags::"latest,stable,${VERSION##v}"
           else
            echo ::set-output name=tags::"latest"
           fi

      - name: Publish on Docker Hub with jib
        run: mvn -B -Djib.to.auth.username=${{secrets.OPT_DOCKERHUB_LOGIN}} -Djib.to.auth.password=${{secrets.OPT_DOCKERHUB_PASSWORD}} -Djib.to.tags=${{steps.image_tags.outputs.tags}} compile jib:build
