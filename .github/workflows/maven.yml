# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      run: mvn -B package
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  conventional-commits-versionning-and-docker:
    needs: [build]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    name: Bump version and create release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - name: Install Semantic release and maven-semantic-release plugin
        run: |
          npm install -g semantic-release \
          @conveyal/maven-semantic-release @semantic-release/git \
          @semantic-release/changelog
      - name: Run semantic release to bump version and create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --skip-maven-deploy

      # et maintenant... Docker (pas de job pour rester sur le même repo potentiellement taggé)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Prepare tags
        id : image_tags
        run: |
           VERSION=$(git describe --tags --exact-match 2>/dev/null || true)
           if [[ $VERSION ]]; then
             echo ::set-output name=tags::"optnc/opt-temps-attente-agences-api:${VERSION##v},optnc/opt-temps-attente-agences-api:stable"
             echo ::set-output name=tags_jvm::"optnc/opt-temps-attente-agences-api:${VERSION##v}-jvm,optnc/opt-temps-attente-agences-api:stable-jvm"
           fi

      - name: Build regular Docker Image (with JVM, non-native)
        run: |
            mvn -B spring-boot:build-image -DskipTests \
              -Dspring-boot.build-image.imageName=optnc/opt-temps-attente-agences-api:latest-jvm \
              -Dspring-boot.build-image.tags=${{ steps.image_tags.outputs.tags_jvm }}
        env:
          MAVEN_OPTS: "-Xmx128m"

      - name: Build Docker Spring Native Image
        run: |
            mvn -B spring-boot:build-image -Pspring-native -Pbuild-docker-image  -DskipTests \
              -Dspring-boot.build-image.imageName=optnc/opt-temps-attente-agences-api:latest \
              -Dspring-boot.build-image.tags=${{ steps.image_tags.outputs.tags }}
        env:
          MAVEN_OPTS: "-Xmx128m"

      # Login against a Docker registry except on PR
      - name: Log into registry docker hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.OPT_DOCKERHUB_LOGIN }}
          password: ${{ secrets.OPT_DOCKERHUB_PASSWORD }}

      - name: List all images
        run: docker images -a

      - name: Push docker image to Docker Hub
        run: docker push --all-tags optnc/opt-temps-attente-agences-api

